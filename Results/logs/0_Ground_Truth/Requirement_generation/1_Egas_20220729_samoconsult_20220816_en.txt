Project Egas {
     RequirementClassification:[
        SafetyGoal
        SafetyFunctional
        SafetyTechnical	    
        SecurityGoal
	    SecurityFunctional
	    SecurityTechnical
    ],
    
    Variables: [
        plausibility_checks,   
        faults,
		unintended_acceleration,
        errors
    ],

    
    Objects: [       
      acceleration,
      deceleration,
      plausibility,
      torque_signals_affecting_requirements_of_other_ECUs,
      signals,
      state,
      states,
      sensor_signals,
      torque_signals,
      Driving_Torque,
	  accessing,      
      entities,
      being_transmitted,
      signals_in_white_list 
      integrity,
      Lamp_switch_on_request,
      received_data,
	  MAC,
      request,
      white_list  
    ],

    Verbs: [
       protect,
       monitor,
       detect,
       confirm,
       drop,
       generate,
       transmit,
	   verify,
       generated,
       transfer,
       verifying
    ],

    ObjectAttribute:[       /*KB*/
        dangerous,
        unintended,
        loss,
        of,
        internal,
        appropriate,
        Undesired,
        safe,
        High,
		unauthenticated,
		malicious,
		detected,
		spoofed,
		spoofing,
    ],
    
	Conditions: [
         
       
    ],
	
    Components: [
       System,
       Drive_Pedal,
       Throttle_Valve,
       Engine_Control_Unit,
       Function_Controller,       
       sensor_system,
       signal_compound,
       other_ECUs,
       Mensor,
	   Navigation_ECU,
       Cellular_network,
       Gateway,
       Power_Switch,
       Body_Control_ECU,
       control_signals,
       Headlamp_system
    ],
	
    States: [
       safe_state
    ],

    
Requirements: [

    /* Prevent dangerous unintended acceleration */

    Requirement Req_SZ_01 SafetyGoal{

        THE System 
        SHALL PREVENT dangerous unintended acceleration     

        /* KB: attributes were defined above; acceleration defined as an object */

        /* PREVENT cannot be used at the beginning of a sentence */   
        /* -> This is not allowed since an actuator must always be named. */

        /* The object must be defined as "Component" or "Variable" */
        /* KB: Object is introduced as a declaration block */
    },            


    /* Prevent dangerous unintended loss of acceleration */
    Requirement Req_SZ_02 SafetyGoal{

        THE System 
        SHALL PREVENT unintended loss of: acceleration

        /* PREVENT cannot be used at the beginning of a sentence */
        /* -> This is not allowed since an actuator must always be named. */ 

        /* HSC 20220810 "Loss_of" divided */
    },            


    /* Prevent dangerous unintended deceleration */
    Requirement Req_SZ_03 SafetyGoal{

        THE System 
        SHALL PREVENT 
        dangerous unintended deceleration          

        /* PREVENT cannot be used at the beginning of a sentence */
        /* -> This is not allowed since an actuator must always be named. */ 
    },            
  

    /* Prevent dangerous unintended loss of deceleration */
    Requirement Req_SZ_04 SafetyGoal{

        THE System 
        SHALL PREVENT unintended loss of: deceleration  

        /* PREVENT cannot be used at the beginning of a sentence */
        /* -> This is not allowed since an actuator must always be named. */ 
    },      


    /* The Drive Pedal shall check the sensor signals of the Drive Pedal for plausibility. */
    Requirement SReq_01 SafetyFunctional{
        
        THE Drive_Pedal 
        SHALL CHECK 
        THE sensor_signals OF 
        THE Drive_Pedal
        FOR plausibility
    },                    


    /* The Drive Pedal shall check its internal sensor signals for plausibility. */
    Requirement SReq_01 SafetyFunctional{

        THE Drive_Pedal 
        SHALL CHECK internal : sensor_signals
        OF THE Drive_Pedal 
        FOR plausibility

        /* "ITS" cannot be used -> "ITS" before Object could be added */
        /* -> Do not add. Better: THE Drive_Pedal SHALL CHECK THE "internal": sensor_signals OF THE Drive_Pedal */
    },              


    /* The Throttle Valve shall check the sensor signals of the Throttle Valve for plausibility. */
    Requirement SReq_02 SafetyFunctional{

        THE Throttle_Valve 
        SHALL CHECK THE sensor_signals
        OF THE Throttle_Valve
        FOR plausibility
    },     


    /* The Throttle Valve shall check its internal sensor signals for plausibility. */
    Requirement SReq_02 SafetyFunctional{

        THE Throttle_Valve
        SHALL CHECK THE internal: sensor_signals
        OF THE Throttle_Valve
        FOR plausibility
    },     


    /* The Engine Control Unit shall detect faults in the Sensor System by using appropriate plausibility checks. */
    Requirement SReq_03 SafetyFunctional{

        THE Engine_Control_Unit
        SHALL DETECT THE faults 
        OF THE sensor_system 
        BY USING appropriate: plausibility_checks    

        /* "faults" without "THE" not allowed — change? */
        /* KB: According to the grammar, currently not possible to omit 'THE' */

        /* HC 20220810 — implies all are included */
        /* According to DSL, it can be omitted (technical issue) */
    },    


    /* The Engine Control Unit shall protect torque signals affecting requirements of other ECUs by using a signal compound. */
    Requirement SReq_04 SafetyFunctional{

        THE Engine_Control_Unit
        SHALL protect 
        THE torque_signals_affecting_requirements_of_other_ECUs 
        BY USING A signal_compound.

        /* "affecting requirements of other ECUs by using a signal compound." not possible */            
        /* -> Add FROM to rule 11, allow multiple chaining */
        /* Which to add? -> use "THOSE" instead of "THE" */
    },    


    Requirement SReq_04_HSC SafetyFunctional{

        THE Engine_Control_Unit
        SHALL protect 
        THE torque_signals
        WHICH ARE affect requirements
        OF other_ECUs 
        BY USING A signal_compound.

        /* HSC 20220810 - Should "WHICH ARE"/"WHICH IS" be added as a keyword to rule 11? */
    },    


    /* The Engine Control Unit shall detect errors in the Actuator by using appropriate plausibility checks. */
    Requirement SReq_05 SafetyFunctional{

        THE Engine_Control_Unit
        SHALL DETECT THE errors 
        IN THE actuator
        BY USING appropriate : plausibility_checks  

        /* KB: 'IN' was added */
        /* HSC 20220810 - Using Actuator as object above results in an error */
        /* Test with Actuator? */
    },    


    Requirement SReq_05a SafetyFunctional{

        THE Engine_Control_Unit
        SHALL CHECK internal: signals 
        OF THE "Actuator"
        FOR plausibility

        /* HSC 20220810 - Using Actuator as object above results in an error */
        /* Test with Actuator? */
    },    


    /* The Engine Control Unit shall detect and confirm Undesired States of a High Driving Torque or an Unintended Acceleration. */
    Requirement SReq_06a SafetyFunctional{

        THE Engine_Control_Unit
        SHALL detect AND confirm Undesired: states OF High_Driving_Torque   

        /* KB: detect and confirm defined in verbs; Undesired in ObjectAttribute */
        /* "States" appears orange — already exists; use lowercase to be treated as a new word */
    },    


    /* The Engine Control Unit shall detect and confirm Undesired States of an Unintended Acceleration. */
    Requirement SReq_06a2 SafetyFunctional{

        THE Engine_Control_Unit
        SHALL detect AND confirm Unintended: acceleration
    },    


    /* In case of detected and confirmed Undesired State of a High Driving Torque or an Unintended Acceleration the Engine Control Unit shall switch into a safe state. */
    /* NOT IMPLEMENTABLE WITH THE DSL (sad) */
    Requirement SReq_06b SafetyFunctional{

        IF Undesired: State OF High_Driving_Torque 
        Engine_Control_Unit
        SHALL SWITCH TO safe: state.

        IF Undesired High: Driving_Torque 
        THE Engine_Control_Unit
        SHALL SWITCH TO safe: state.

        /* "States OF -> A High_Driving_Torque" causes error, but should work according to the template */
        /* "IS detected AND confirmed" not possible */
        /* -> Revise IF condition -> Add IS in rule 3, allow "detected" AND "confirmed" as after "SHALL" to link correctly */
        /* THE Engine_Control_Unit not possible due to "OF High_Driving_Torque" -> allow multiple applications */

        /* HSC 20220810 - Where is the problem here? */
    },    


    Requirement SReq_06b2 SafetyFunctional{
        /* NOT IMPLEMENTABLE WITH THE DSL (sad) */
        
        IF Unintended: acceleration 
        THE Engine_Control_Unit
        SHALL SWITCH TO safe_state.

        /* "IS detected AND confirmed" not possible */
        /* -> Revise IF condition -> Add IS in rule 3, allow "detected" AND "confirmed" as after "SHALL" */
        /* HSC 20220810 - Where is the problem here? */
    },    


    /* The Engine Control Unit shall monitor the Function Controller. */
    Requirement SReq_07 SafetyFunctional{

        THE Engine_Control_Unit
        SHALL monitor
        THE Function_Controller. 
    }  
]

}