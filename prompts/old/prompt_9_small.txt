Your task is to convert the natural language requirements into LESS requirements. The LESS formatted requirements are controlled language requirements that follow the following rules:
1. Conditional: each requirement begins with a "conditional" (optional). This could contain keywords: "IF" or "IF NOT" or "WHILE" or "DURING" or "AFTER" or "BEFORE" or "AS SOON AS" or "IN CASE OF". This is followed by either: 
	a boolean state expression which could contain [Variables] or [Components] that can be concatenated with keyword "AND" then followed by keyword "IN" [States]; OR
	a behaviour description that can begin with a transitional like "FROM" [States] and "TO" [States] or [Variables] or a [Components] or a boolean math expression or [Errors] and may be followed by "WAS" or "IS" and then [ObjectAttribute]. The boolean math expressions are [Variables] followed by a "LESS THAN", "GREATER THAN" or "EQUAL TO" and ending with an integer or [Variables]. Multiple of these conditionals can be concatenated with "AND".	
  The conditional can end with "THEN" but is optional.	
2. multiple object attributes that describe attributes of the subject from the [ObjectAttribute] list
3. A Subject (Mandatory): The requirement must specify the specific subject it applies to. It can either be a specific subject or a set of components. This may begin with "THE", "ANY", "ALL", "SOME", "SOME SYSTEMS OF THE", which is then followed by a subject (mandatory) which could be a [Components] or [Variables] or [Errors] then may be followed by phrases like "OF", "BY USING", "FROM", "FOR", "IN", "AGAINST", "TO", "WITH", "EXCEPT FOR", "WHICH", "THAT" and end with a [Verbs]. 
4. obligation (Mandatory): The modal verb defines obligation. Only two verbs possible: "SHALL" or "SHALL NOT"
5. System Activity (Optional): This could be either provide_activity or be_able activity or a process_verb. Process_verb could only be "ENSURE", "DETECT", "SWITCH", "ALLOW", "PREVENT" OR "PREVENT FROM" OR "CHECK" or a [Verbs] from pre-defined list. Always use the process_verb in capital letters but [Verbs] should be small letter. The provide-activity must begin with "PROVIDE" followed by [Variables] or a [Components] then followed by "WITH THE ABILITY TO" or "TO" and then followed by any of the process_verbs described above. be_able activity must begin with "BE ABLE TO" followed by any of the process_verbs described above. Multiple of these activities can be then joined by "AND" which can then be followed by a transitional like FROM [States] and TO [States].
6. object attributes(Optional): from the  [ObjectAttribute] list
7. object: This can be object or specific object or all object or each object. They begin with THE, ANY, A, AN, ALL THE, or EACH. Followed by an object which could be any string or [Components] or [Variables] or [Errors] then followed by phrases like "OF", "BY USING", "FROM", "FOR", "IN", "AGAINST", "TO", "WITH", "EXCEPT FOR", "WHICH", "THAT", any may be followed by a [Verbs].
8. External Condition (Optional): Adds additional conditions at the end of the requirement. It includes "IF AND ONLY IF" or "IF AND ONLY IF NOT" as starting phrase. This is followed by either a boolean state expression which could contain [Variables] or [Components]  that can be concatenated with keyword AND then followed by IN [States] or a behaviour description that can begin with a transitional like FROM [States] and TO [States] or [Variables] or a [Components] or a boolean math expression or [Errors] and may be followed by "WAS" or "IS" and may be followed by [ObjectAttribute]. These behaviour description can be concatenated with AND. The boolean math expressions are [Variables] followed by a "LESS THAN", "GREATER THAN" or "EQUAL TO" and end with an integer or another [Variables]. External Condition is always before Relaxation.
9. Relaxation (Optional): Specifies when the requirement no longer applies. It starts with "UNTIL" or "WITHIN" and comes always at the end.
only use [Variables], [Components], [Verbs], [ObjectAttribute], [States] defined below when forming requirements. If there are [Variables], [Components], [Verbs], [ObjectAttribute], [States] other than the ones mentioned below then replace them with below elements if they are synonyms. Always use small case letters for [Variables], [Components], [Verbs], [ObjectAttribute] 

You can use the following Json formatted examples to generate the results. The results should also be in same format as the samples below. Important: Do not include any additional text or notes outside of the JSON output. do not add any notes or any additional text other than json putput:
[
  {
    "nlp": "While the system is in bvad mode, it should allow the user to start the right EPU only if the left EPU is running.",
    "LESS": "WHILE bvad_mode THE system SHALL BE ABLE TO start THE right_epu IF AND ONLY IF left_epu IN is_running"
  },
  {
    "nlp": "In the clinical UI, switching from manual mode to auto mode should be possible only if the user is logged in.",
    "LESS": "THE clinical_ui SHALL BE ABLE TO SWITCH FROM manual_mode TO auto_mode IF AND ONLY IF user IN logged_in"
  },
  {
    "nlp": "The user should be able to modify the default systolic pressure before engaging the manual mode.",
    "LESS": "BEFORE manual_mode IS engaged THE user SHALL BE ABLE TO adjust THE default_systolic_pressure."
  },
  {
    "nlp": "If the system switches from manual mode to auto mode, it should adjust the diastolic pressure limit within 5 minutes.",
    "LESS": "IF FROM manual_mode TO auto_mode THE system SHALL adjust THE diastolic_pressure_limit WITHIN \"5 min\""
  },
  {
    "nlp": "The user should be able to check the current diastolic pressure of the sytem if it switches from the manual mode to the auto mode.",
    "LESS": "IF FROM manual_mode TO auto_mode THE user SHALL BE ABLE TO CHECK current diastolic_pressure"
  },
  {
    "nlp": "The clinical user interface should display the description of manual mode if manual mode is selected.",
    "LESS": "IF manual_mode IS selected THE clinical_ui SHALL display THE description OF manual_mode"
  },
  {
    "nlp": "If the compact_drive is in bvad mode and the right epu fails, the compact drive has to signal an S8 error.",
    "LESS": "IF bvad_mode AND right_epu IN failed STATE THE compact_drive SHALL signal A s8_error"
  }
]


Now, convert the following natural language requirement into a LESS requirement:

[
  {
    "nlp": " The system should allow the user to pause the left epu while in bvad_mode if and only if the right EPU is in the stopped state."
  },
  {
    "nlp": " The clinical user interface should allow switching from auto mode to manual mode if only if the user is logged in."
  },
  {
    "nlp": " The default diastolic pressure should be adjustable from user's side before the manual_mode is engaged."
  }
]

